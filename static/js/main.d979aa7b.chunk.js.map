{"version":3,"sources":["components/Navbar/Navbar.js","components/Banner/Banner.js","components/Footer/Footer.js","Context/MyContext.js","components/TryAgain/TryAgain.js","components/DetailCards/DetailCard.js","components/TestLetter/TestLetter.js","components/TypingChallenge/TypingChallenge.js","components/TestContainer/TestContainer.js","components/MainSection/MainSection.js","components/ChallengeSection/ChallengeSection.js","Context/AppReducer.js","Context/AppContext.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","target","href","rel","class","Banner","data-aos","options","strings","autoStart","loop","Footer","MyContext","createContext","TryAgain","useContext","initial","type","data","wpm","characters","words","onClick","reStart","DetailCard","cardName","cardValue","TestLetter","individualLetterInfo","statusClassName","correct","incorrect","notAttempted","status","testLetter","TypingChallenge","timeRemaining","timer","anim","clearInterval","updateTimer","useEffect","timeStarted","testInfo","map","cur","index","onChange","e","inputValue","value","startTimer","setInterval","setTimeout","length","split","manageUnderflow","selectedParagraph","manageOverflow","normalCase","onChangeHandler","placeholder","TestContainer","MainSection","ChallengeSection","fetch","then","res","text","info","updateParagraph","setTestInfo","id","appReducer","state","action","console","log","payload","tempTest","slice","isCorrect","parseInt","AppContext","props","useReducer","dispatch","Provider","para","children","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d979aa7b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"nav-left\">\r\n                <p className=\"flash-logo-text\">Thunder-Type</p>\r\n            </div>\r\n            <div className=\"nav-right\">\r\n                <a\r\n                    target=\"_blank\"\r\n                    className=\"nav-aam-link\"\r\n                    href=\"https://github.com/kaushalendra-pandey\"\r\n                    rel=\"noreferrer\"\r\n                >\r\n                    <i class=\"fab fa-github\"></i>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport \"./Banner.css\";\r\n\r\n\r\nconst Banner = () => {\r\n    return (\r\n        <div className=\"landing-container bg-dark\">\r\n            <div data-aos=\"fade-right\" className=\"landing-left\">\r\n                <h1 className=\"landing-header\">Can you type</h1>\r\n                <div className=\"typewriter-container text-danger\">\r\n                    <Typewriter\r\n                        options={{\r\n                            strings: [\"Fast?\", \"Correct?\", \"Quick?\"],\r\n                            autoStart: true,\r\n                            loop: true,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"landing-right\">\r\n                <img\r\n                    className=\"img-thumbnail\"\r\n                    data-aos=\"fade-left\"\r\n                    className=\"flash-image\"\r\n                    src=\"http://www.clker.com/cliparts/L/j/U/f/3/O/thunder-bolt-plain-hi.png\"\r\n                    alt=\"flash\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Banner;","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer-container\">\r\n            <a\r\n                target=\"_blank\"\r\n                className=\"footer-link\"\r\n                href=\"https://www.linkedin.com/in/kaushalendra-pandey-47a971192/\"\r\n                rel=\"noreferrer\"\r\n            >\r\n                Contact Me\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import {createContext} from \"react\"\r\n\r\nconst MyContext = createContext()\r\n\r\nexport default MyContext","import React,{useContext} from \"react\";\r\nimport \"./TryAgain.css\";\r\nimport MyContext from \"../../Context/MyContext\"\r\n\r\nconst TryAgain = () => {\r\n    const {initial,type} = useContext(MyContext)\r\n    const data = initial\r\n    const url = \"theleanprogrammer.com\";\r\n    return (\r\n        <div data-aos=\"fade-up\" className=\"try-again-container\">\r\n            <h1>Test Results</h1>\r\n\r\n            <div className=\"result-container\">\r\n                {\r\n                    data.wpm < 20 ? (\r\n                        <p className=\"text-danger\">You need to Improve!! Keep Practicing..</p>\r\n                    ) :\r\n                    (\r\n                        <p className=\"text-success\">You are going Good!! Keep it up..</p>\r\n                    )\r\n                }\r\n                <p>\r\n                    <b>Characters:</b> {data.characters}\r\n                </p>\r\n                <p>\r\n                    <b>Words:</b> {data.words}\r\n                </p>\r\n                <p>\r\n                    <b>Speed</b> {data.wpm} wpm\r\n                </p>\r\n            </div>\r\n\r\n            <div>\r\n                <button\r\n                    className=\"end-buttons start-again-btn\"\r\n                    onClick={()=>type.reStart()}\r\n                >\r\n                    Re-try\r\n                </button>\r\n                <button className=\"end-buttons share-btn\">\r\n                    Share\r\n                </button>\r\n                <button className=\"end-buttons tweet-btn\">\r\n                    Tweet\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TryAgain;","import React from \"react\";\r\nimport \"./DetailCard.css\";\r\n\r\nconst DetailCard = ({ cardName, cardValue }) => {\r\n    return (\r\n        <div className=\"details-card-container\">\r\n            <div className=\"card-name\">{cardName}</div>\r\n            <div className=\"card-value\">{cardValue}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetailCard;","import React,{useContext} from \"react\";\r\nimport \"./TestLetter.css\";\r\n\r\nconst TestLetter = ({ individualLetterInfo }) => {\r\n    \r\n    const statusClassName = {\r\n        correct: \"test-letter-correct\",\r\n        incorrect: \"test-letter-incorrect\",\r\n        notAttempted: \"test-letter-not-attempted\",\r\n    }[individualLetterInfo.status];\r\n\r\n    return (\r\n        <span className={`test-letter ${statusClassName}`}>\r\n            {individualLetterInfo.testLetter}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default TestLetter;","import React,{useContext,useEffect} from \"react\";\r\nimport \"./TypingChallenge.css\";\r\nimport TestLetter from \"../TestLetter/TestLetter\"\r\nimport MyContext from \"../../Context/MyContext\"\r\n\r\nconst TypingChallenge = () => {\r\n\r\n    const {initial,type} = useContext(MyContext)\r\n    const data = initial\r\n    var timeRemaining = data.timeRemaining\r\n    var timer = null\r\n    const onChangeHandler = (e) => {\r\n        const inputValue = e.target.value\r\n        if(!data.timeStarted){\r\n            type.startTimer()\r\n            \r\n            timer = setInterval(anim,1000)\r\n            setTimeout(()=>clearInterval(timer),60000)\r\n\r\n            \r\n        }\r\n\r\n        const characters = inputValue.length\r\n        const words = inputValue.split(\" \").length\r\n        const index = characters - 1\r\n\r\n        if(index < 0)\r\n        {\r\n            type.manageUnderflow({characters,words})\r\n            return\r\n        }\r\n\r\n        else if(index >= data.selectedParagraph.length-1){\r\n            type.manageOverflow({characters,words})\r\n            return\r\n        }\r\n\r\n        else{\r\n            type.normalCase({characters,words,inputValue,index})\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n    function anim() {\r\n        if (timeRemaining === 0)\r\n        clearInterval(timer)\r\n        else\r\n        type.updateTimer()\r\n\r\n    }\r\n    \r\n   useEffect(() => {\r\n       \r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"typing-challenge\">\r\n            <div className=\"timer-container\">\r\n                {\r\n                    data.timeStarted ? \r\n                        <p className=\"timer\">\r\n                        {`00:${data.timeRemaining>10 ? data.timeRemaining : `0${data.timeRemaining}`}`}\r\n                        </p> :\r\n                        <p className=\"timer-info fs-3\">\r\n                            Keep Calm and write..\r\n                        </p>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"textarea-container\">\r\n                <div className=\"textarea-left \">\r\n                    <div className=\"textarea test-paragraph\">\r\n                        {/* {data.selectedParagraph} */}\r\n                        {\r\n                            data.testInfo.map((cur,index)=> {\r\n                                return (\r\n                                   <TestLetter key={index} individualLetterInfo={cur}/>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"textarea-right\">\r\n                    <textarea\r\n                        onChange={(e) => onChangeHandler(e)}\r\n                        className=\"textarea\"\r\n                        placeholder=\"write here..\"\r\n                    ></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypingChallenge;","import React,{useContext} from \"react\";\r\nimport DetailCard from '../DetailCards/DetailCard'\r\nimport \"./TestContainer.css\";\r\nimport TypingChallenge from \"../TypingChallenge/TypingChallenge\"\r\nimport MyContext from \"../../Context/MyContext\"\r\n\r\nconst TestContainer = () => {\r\n    const {initial} = useContext(MyContext)\r\n    const data = initial\r\n    return (\r\n        <div className=\"typing-challenge-container\">\r\n            <div className=\"details-container\">\r\n                {/* Words Typed */}\r\n                <DetailCard cardName=\"Words\" cardValue={data.words} />\r\n\r\n                {/* Characters Typed */}\r\n                <DetailCard\r\n                    cardName=\"Characters\"\r\n                    cardValue={data.characters}\r\n                />\r\n\r\n                {/* Mistakes */}\r\n                <DetailCard cardName=\"WPM\" cardValue={data.wpm} />\r\n\r\n            </div>\r\n\r\n            <div className=\"typewriter-container\">\r\n                <TypingChallenge/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TestContainer;","import React,{useContext} from \"react\";\r\nimport TryAgain from \"../TryAgain/TryAgain\"\r\nimport TestContainer from \"../TestContainer/TestContainer\"\r\nimport MyContext from \"../../Context/MyContext\"\r\n\r\nimport './MainSection.css'\r\n\r\nconst MainSection = () => {\r\n\r\n    const {initial} = useContext(MyContext)\r\n    const timeRemaining = initial.timeRemaining\r\n\r\n    return (\r\n        <div className=\"test-container\">\r\n            \r\n            {\r\n                timeRemaining ? (\r\n                <div data-aos=\"fade-up\" className=\"typing-challenge-cont\">\r\n                    <TestContainer/>\r\n                </div>\r\n                ) :\r\n                (\r\n                 <div className=\"try-again-cont\">\r\n                    <TryAgain/>\r\n                </div>\r\n                )\r\n            }   \r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainSection;","import React,{useContext,useEffect} from \"react\";\r\nimport MainSection from \"../MainSection/MainSection\"\r\nimport \"./ChallengeSection.css\";\r\nimport MyContext from \"../../Context/MyContext\"\r\n\r\nconst URI = \"http://metaphorpsum.com/paragraphs/1/9\"\r\n\r\nconst ChallengeSection = () => {\r\n\r\n    const {initial,type} = useContext(MyContext)\r\n    \r\n    const apiCall = () => {\r\n        fetch(URI)\r\n        .then(res => res.text())\r\n        .then(info=>{\r\n            type.updateParagraph(info)\r\n            type.setTestInfo(info)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        apiCall()\r\n    },[initial.id])\r\n\r\n    return (\r\n        <div className=\"challenge-section-container bg-dark\">\r\n            <h1 data-aos=\"fade-down\" className=\"challenge-section-header\">\r\n                Take a Speed Test Now!\r\n            </h1>\r\n            <MainSection></MainSection>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChallengeSection;","const appReducer = (state,action) => {\r\n    switch(action.type){\r\n        case \"update\":\r\n            console.log(action.payload);\r\n            return{\r\n                ...state,\r\n                selectedParagraph:action.payload\r\n            }\r\n        case \"testInfo\":{\r\n            const text = action.payload.split('')\r\n            const testInfo = text.map((cur)=>{\r\n                return {\r\n                    testLetter:cur,\r\n                    status:\"notAttempted\"\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                testInfo\r\n            }\r\n        }\r\n        case \"startTimer\":{\r\n            return {\r\n                ...state,\r\n                timeStarted:true,\r\n            }\r\n        }\r\n\r\n        case \"updateTimer\": {\r\n            return {\r\n                ...state,\r\n                timeRemaining: state.timeRemaining > 0 ? state.timeRemaining-1 : state.timeRemaining\r\n                }\r\n            }\r\n        case \"manageUnderflow\": {\r\n            let tempTest = [\r\n                {\r\n                    testLetter:state.testInfo[0].testLetter,\r\n                    status:\"notAttempted\"\r\n                },\r\n                ...state.testInfo.slice(1)\r\n            ]\r\n            return {\r\n                ...state,\r\n                testInfo:tempTest,\r\n                characters:action.payload.characters,\r\n                words:action.payload.words\r\n\r\n            }\r\n        }\r\n\r\n        case \"manageOverflow\":{\r\n            return {\r\n                ...state,\r\n                characters:action.payload.characters,\r\n                words:action.payload.words\r\n            }\r\n        }\r\n        \r\n        case 'normalCase':{\r\n            const {index,inputValue,words,characters} = action.payload\r\n            let tempTest = state.testInfo\r\n            if(!(index === state.selectedParagraph.length - 1)){\r\n                tempTest[index+1].status = \"notAttempted\"\r\n            }\r\n\r\n            const isCorrect = inputValue[index] === tempTest[index].testLetter\r\n            tempTest[index].status = isCorrect ? \"correct\" : \"incorrect\"\r\n            \r\n            const wpm = parseInt((state.words/(60-state.timeRemaining+1))*60)\r\n\r\n            return {\r\n                ...state,\r\n                testInfo:tempTest,\r\n                words,\r\n                characters,\r\n                wpm\r\n            }\r\n\r\n        }\r\n\r\n        case \"reStart\":{\r\n            return {\r\n                ...action.payload,\r\n                id:state.id+1\r\n            }\r\n        }\r\n        \r\n        }\r\n\r\n      \r\n\r\n          \r\n        \r\n\r\n\r\n    }\r\n\r\n\r\nexport default appReducer","import React,{useReducer} from 'react'\r\nimport MyContext from \"./MyContext\"\r\nimport appReducer from \"./AppReducer\"\r\n\r\nconst AppContext = (props) => {\r\n    const initial = {\r\n        id:0,\r\n        selectedParagraph:\"Hello World!!\",\r\n        words:0,\r\n        characters:0,\r\n        wpm:0,\r\n        timeRemaining:60,\r\n        timeStarted:false,\r\n        testInfo:[]\r\n        \r\n      }\r\n\r\n      const [state,dispatch] = useReducer(appReducer,initial)\r\n\r\n      // reducer functions:\r\n      const updateParagraph = (para) => {\r\n          \r\n          dispatch({\r\n              type:\"update\",\r\n              payload:para\r\n          })\r\n      }\r\n\r\n      const setTestInfo = (para) => {\r\n        dispatch({\r\n            type:'testInfo',\r\n            payload:para\r\n        })\r\n      }\r\n\r\n      const startTimer = () => {\r\n          dispatch({\r\n              type:\"startTimer\",\r\n          })\r\n      }\r\n\r\n      const updateTimer = () => {\r\n          dispatch({\r\n              type:\"updateTimer\"\r\n          })\r\n      }\r\n\r\n      const manageUnderflow = (data) => {\r\n\r\n        dispatch({\r\n            type:\"manageUnderflow\",\r\n            payload:data\r\n        })\r\n      }\r\n\r\n      const manageOverflow = (data) => {\r\n          dispatch({\r\n              type:\"manageOverflow\",\r\n              payload:data\r\n          })\r\n      }\r\n\r\n      const normalCase = (data) => {\r\n          dispatch({\r\n              type:\"normalCase\",\r\n              payload:data\r\n          })\r\n      }\r\n\r\n      const reStart = () => {\r\n          dispatch({\r\n              type:\"reStart\",\r\n              payload:initial\r\n          })\r\n      }\r\n\r\n\r\n    return (\r\n        <MyContext.Provider value={\r\n            {\r\n            initial:state,\r\n            type:{updateParagraph,\r\n                setTestInfo,\r\n                startTimer,\r\n                updateTimer,\r\n                manageUnderflow,\r\n                normalCase,\r\n                manageOverflow,\r\n                reStart\r\n            }\r\n            }\r\n        }>\r\n            {props.children}\r\n\r\n        </MyContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AppContext\r\n\r\n","import './App.css';\nimport {useContext} from \"react\"\nimport Navbar from './components/Navbar/Navbar'\nimport Banner from \"./components/Banner/Banner\"\nimport Footer from './components/Footer/Footer';\nimport ChallengeSection from \"./components/ChallengeSection/ChallengeSection\"\nimport AppContext from \"./Context/AppContext\"\nimport MyContext from \"./Context/MyContext\"\n\n\n\nfunction App() {\n\n  \n  return (\n    <div className=\"App\">\n\n      <Navbar/>\n      <Banner/>\n      <AppContext>\n        <ChallengeSection/>\n      </AppContext>\n      <Footer/>\n\n      {/* Navabar \n      Banner \n      Main \n      Footer */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}